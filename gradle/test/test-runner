#!/usr/bin/env bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

. "$SCRIPT_DIR/logging"

function camelToUnderScore(){
  echo $1 | sed -r 's/([a-z0-9])([A-Z])/\1_\L\2/g'
}

function toUppercase(){
  printf '%s\n' "$1" | awk '{ print toupper($0) }'
}

function runTests(){
    local testScript="$1"
    shift
    local testScriptDir=$(dirname $testScript)

    local beforeEachFn=$(listBeforeEach "$testScript")
    local testFunctions=$(listTests "$testScript")
    local afterEachFn=$(listAfterEach "$testScript")


    echo "$testFunctions" | while read test; do
      function log(){
        local level=$1
        shift

        case "$level" in
          failed|error) logError "$(echo "$@" | sed -e "s/^/[$test] /")";;
          success|ok)  logSuccess "$(echo "$@" | sed -e "s/^/[$test] /")";;
          warn) logWarn "$(echo "$@" | sed -e "s/^/[$test] /")";;
          *) logInfo "$(echo "$level" "$@" | sed -e "s/^/[$test] /")";;
        esac
      }

      (
          . "${SCRIPT_DIR}/test-utils"
          . "$testScript"
          local beforeEachResult=""

          if [[ ! -z "${beforeEachFn}" ]]; then
              log warn "beforeEach"
              beforeEachResult=$($beforeEachFn)
          fi

          if [ -d "$beforeEachResult" ]; then
            cd "$beforeEachResult"
          fi

          log warn "Executing $test"
          (${test} log "$beforeEachResult")
          local exitCode=$?

          if [[ ! -z "${afterEachFn}" ]]; then
             log warn "afterEach"
              ${afterEachFn} log $beforeEachResult
          fi

          if [ $exitCode != 0 ]; then exit $exitCode; fi
      )
      local exitCode=$?
      if [ $exitCode != 0 ]; then
        log failed "TEST FAILED"
        exit $exitCode
      else
        log success "TEST SUCCESSFUL"
      fi
    done
}

function listBeforeEach(){
  local testScript="$1"
  shift

  grep -v -x -f <(declare -F) <(. ${testScript}; declare -F) | cut  -c 12- | grep "^beforeEach$"
}

function listAfterEach(){
  local testScript="$1"
  shift

  grep -v -x -f <(declare -F) <(. ${testScript}; declare -F) | cut  -c 12- | grep "^afterEach$"
}

function listTests(){
  local testScript="$1"
  shift

  grep -v -x -f <(declare -F) <(. ${testScript}; declare -F) | cut  -c 12- | grep "^test"
}