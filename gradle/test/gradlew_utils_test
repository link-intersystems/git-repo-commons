#!/usr/bin/env bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

function main() {
  clean

  beforeTestGradleExec
  (GIT_DIR="${SCRIPT_DIR}/build/tests/gradle-project/_git"; GIT_WORK_TREE="${SCRIPT_DIR}/build/tests/gradle-project" testGradlewExec) # run isolated
  local exitCode=$?
  afterTestGradleExec

  if [ $exitCode != 0 ]; then
    echo "TESTS FAILED"
    exit $exitCode;
  else
    echo "TESTS SUCCESSFUL"
  fi
}

function assertSuccess() {
  if [ $? != 0 ]; then
    >&2 echo "Process not finished successfully: $1"
    exit 1
  fi
}

function assertContains(){
  local str="$1"
  local searchStr="$2"

  if [[ $str != *"$searchStr"* ]]; then
    >&2 echo "Does not contain: $searchStr"
    exit 1
  fi
}

function clean(){
  if [ -d "${SCRIPT_DIR}/build/tests/gradle-project" ]; then
    rm -rf "${SCRIPT_DIR}/build/tests/gradle-project" > /dev/null
  fi
}

function beforeTestGradleExec(){
  cp -r "${SCRIPT_DIR}/gradle-project" "${SCRIPT_DIR}/build/tests/gradle-project" > /dev/null
  cp -r "${SCRIPT_DIR}/../.bin" "${SCRIPT_DIR}/build/tests/gradle-project/.bin" > /dev/null

  pushd "$(pwd)" 2>&1 > /dev/null

  cd "${SCRIPT_DIR}/build/tests/gradle-project" > /dev/null
}

function afterTestGradleExec(){
  popd 2>&1 > /dev/null
}

function testGradlewExec(){
  echo $(pwd)
  . .bin/gradlew_utils
  local result="$(gradlewExec projects)"
  echo "$result" | sed -e 's/^/[GRADLEW] /'
  assertSuccess "gradlewExec"
  assertContains "$result" "BUILD SUCCESSFUL"
}

main "@*"