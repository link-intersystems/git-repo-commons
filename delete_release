#!/usr/bin/env bash

. io_utils
. git_utils

function main(){
  declare -A options
  options["--batch"]="All questions will be answered with the default answer."
  local arguments=($@)
  declare -A args
  parseArgs args options arguments
  if [ $? -ne 0 ]; then
    printHelp $(basename $0) options
  fi

  local defaultAnswer=""
  if [ "${args["batch"]}" == "true" ]; then
    defaultAnswer="y"
  fi
  declare answer
  local confirmationOptions=(y n)

  if git status -u no --porcelain; then
    confirmation "Your local changes might be overridden. Do you want to abort?" confirmationOptions answer "$defaultAnswer"
    if [ "$answer" == "y" ]; then
      echo "Aborting due to local git changes."
      exit 1
    fi
  fi

  local tagToDelete=$(latestTag)
  confirmation "Do you want to delete tag '$tagToDelete'?" confirmationOptions answer "$defaultAnswer"

  if [ "$answer" == "n" ]; then
    exit 1
  fi

  current_branch=$(git rev-parse --abbrev-ref HEAD)
  (
    git checkout --detach HEAD
    local cherry_pick=$(git rev-list "$( git rev-list --grep="new version" $tagToDelete..HEAD)..HEAD")

    if [ ! -z "${cherry_pick}" ]; then
      echo "Found commits after the latest release ${latest_tag} to cherry-pick:"
      echo "$cherry_pick{}" | tr ' ' '\n'
      if ! git cherry-pick -m 1 --allow-empty ${cherry_pick}; then
        echo "Cherry-pick went wrong. Aborting..."
        exit 1
      fi
    fi
  )
  git checkout -f ${current_branch}
}

main $*